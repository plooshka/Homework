from cli.rss import RSSReader
from ebooklib import epub


def xml_header(text: str):
    return f"<h1>{text}</h1>"


def xml_paragraph(text: str):
    return f"<p>{text}</p>"


def xml_link(link: str):
    return f'<a href="{link}">{link}</a>'


def xml_image(image_url: str):
    if image_url == "No image":
        return "<p>No image</p>"
    return f'<img align="center" src="{image_url}"></image>'


class RSSExporter:
    def __init__(self, rss_dict):
        self.rss = rss_dict

    def export(self, format: str):
        if format == "epub":
            self.as_epub()
        if format == "html":
            self.as_html()

    def as_html(self):
        news = self.rss
        channel_title = news[0]["channel_title"]
        content = f"""
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
        <title>py-rss</title>
    </head>
    <body>
        <h1>This document was generated by py-rss</h1>
        {"".join(["".join([
            xml_header(entry["title"]),
            xml_image(entry["image"]),
            xml_paragraph(entry["description"]),
            xml_link(entry["link"])
        ]) for entry in news])}
    </body>
</html>"""
        with open(f"{channel_title}.html", "w") as html:
            html.write(content)

    def as_epub(self):
        news = self.rss.as_dicts()
        book = epub.EpubBook()
        channel_title = news[0]["channel_title"]
        book.set_title(channel_title)
        book.set_identifier(channel_title)
        book.set_language("rus")
        book.add_author("py-rss")

        intro = epub.EpubHtml(title="Notice", file_name="intro.xhtml", lang="en")
        intro.content = "<html><head></head><body><h1>Notice</h1><p>This document was automatically generated by py-rss.</p></body></html>"
        chapters = [intro]
        book.add_item(intro)
        for (number, entry) in enumerate(news):
            title = entry["title"]
            chapter = epub.EpubHtml(title=entry["title"], file_name=f"{number}.xhtml")
            chapter.content = "\n".join(
                [
                    xml_header(entry["title"]),
                    xml_image(entry["image"]),
                    xml_paragraph(entry["description"]),
                    xml_link(entry["link"]),
                ]
            )
            chapters.append(chapter)
            book.add_item(chapter)

        book.toc = (
            epub.Link("intro.xhtml", "Notice", "intro"),
            (epub.Section("News"), tuple(chapters)),
        )
        book.add_item(epub.EpubNcx())
        book.add_item(epub.EpubNav())
        book.spine = chapters
        epub.write_epub(f"{channel_title}.epub", book, {})
